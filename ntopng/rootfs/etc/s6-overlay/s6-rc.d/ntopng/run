#!/command/with-contenv bashio
# shellcheck disable=SC2191
# ==============================================================================
# Li Tin O've Weedle Add-on: ntopng
# Runs the ntopNG
# ==============================================================================
declare -a options

# Wait for Redis to become available
s6-svwait -u -t 5000 /run/service//redis

# Wait for Redis to become available
bashio::net.wait_for "$(bashio::config 'redis_loc_port')" localhost 900

# Wait for Netflow2NG to become available
s6-svwait -u -t 5000 /run/service//netflow2ng

# Wait for Netflow2NG to become available
bashio::net.wait_for "$(bashio::config 'zmq_loc_port')" localhost 900

# Wait for Redis...
bashio::log.info "ntopng is waiting until Redis is available..."
for i in {1800..0}; do
    if [ `redis-cli PING` == "PONG" ]; then
        break;
    fi
    sleep 5
done

# Wait for geoipupdate
if bashio::fs.file_exists /etc/GeoIP.conf; then
    bashio::log.info "ntopng is waiting until geoipupdate download database..."
    for i in {1800..0}; do
        if bashio::fs.file_exists /var/lib/GeoIP/.finished; then
            break;
        fi
        sleep 5
    done
fi

if [[ "$i" = 0 ]]; then
    bashio::log.warning "ntopng is done waiting. Starting anyway..."
fi

bashio::log.info 'Starting ntopng...'

options+=(--interface="zmq://127.0.0.1:$(bashio::config 'zmq_loc_port')")
options+=(--data-dir=/data/rrd)
options+=(--pcap-dir=/data/pcap)
options+=(--pid=/var/run/ntopng/ntopng.pid)
options+=(--http-port="127.0.0.1:$(bashio::config 'ntopng_loc_port')")
options+=(--https-port=0)
options+=(--http-prefix="/ntopng_prefix")

if bashio::config.true 'custom_scripts'; then
    options+=(--scripts-dir=/data/scripts)
fi

if bashio::config.false 'ntop_auth'; then
    if bashio::config.true 'leave_front_door_open' && bashio::var.has_value "$(bashio::addon.port 80)"; then
        bashio::log.warning
        bashio::log.warning "Direct access mode is enabled"
        bashio::log.warning "and both HA access authentication"
        bashio::log.warning "and ntop application is disabled!"
        bashio::log.warning
        bashio::log.warning "Anyone will have access to ntop!"
        bashio::log.warning
    fi
    options+=(--disable-login=1)
#    options+=(--disable-autologout)
fi

if $(bashio::config.has_value 'dns_mode'); then
    options+=(--dns-mode="$(bashio::config 'dns_mode')")
fi

if $(bashio::config.has_value 'export_flows'); then
    options+=(--dump-flows="$(bashio::config 'export_flows')")
fi

if $(bashio::config.has_value 'local_net'); then
    nets=""
    for net in $(bashio::config 'local_net'); do
        nets+=$net","
    done
    options+=(--local-networks="${nets%,}")
fi

# Find the matching ntopng log level
if bashio::config.has_value 'log_level'; then
    case "$(bashio::string.lower "$(bashio::config 'log_level')")" in
        all|trace|debug)
            options+=(--verbose=6)
            ;;
        info)
            options+=(--verbose=5)
            ;;
        notice)
            options+=(--verbose=4)
            ;;
        warning)
            options+=(--verbose=3)
            ;;
        error)
            options+=(--verbose=2)
            ;;
        fatal)
            options+=(--verbose=1)
            ;;
        off)
            options+=(--verbose=0)
            ;;
    esac
fi

bashio::log.info "ntopng ${options[@]}"

# Run ntopng
exec s6-setuidgid ntopng ntopng "${options[@]}"

